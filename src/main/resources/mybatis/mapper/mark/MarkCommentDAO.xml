<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maopao.mapper.mark.MarkCommentDAO">
  <resultMap id="BaseResultMap" type="com.maopao.entity.mark.MarkComment">
    <id column="co_id" jdbcType="BIGINT" property="coId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="mark_id" jdbcType="BIGINT" property="markId" />
    <result column="from_uid" jdbcType="BIGINT" property="fromUid" />
    <result column="to_uid" jdbcType="BIGINT" property="toUid" />
    <result column="from_name" jdbcType="VARCHAR" property="fromName" />
    <result column="to_name" jdbcType="VARCHAR" property="toName" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="log_idate" jdbcType="INTEGER" property="logIdate" />
    <result column="log_datetime" jdbcType="TIMESTAMP" property="logDatetime" />
    <result column="f_id" jdbcType="BIGINT" property="fId" />
    <result column="praise_num" jdbcType="INTEGER" property="praiseNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    co_id, user_id, mark_id, from_uid, to_uid, from_name, to_name, text, avatar, is_del, 
    log_idate, log_datetime, f_id, praise_num
  </sql>
  <select id="selectByExample" parameterType="com.maopao.entity.mark.MarkCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mark_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mark_comment
    where co_id = #{coId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mark_comment
    where co_id = #{coId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.maopao.entity.mark.MarkCommentExample">
    delete from mark_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maopao.entity.mark.MarkComment">
    insert into mark_comment (co_id, user_id, mark_id, 
      from_uid, to_uid, from_name, 
      to_name, text, avatar, 
      is_del, log_idate, log_datetime, 
      f_id, praise_num)
    values (#{coId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{markId,jdbcType=BIGINT}, 
      #{fromUid,jdbcType=BIGINT}, #{toUid,jdbcType=BIGINT}, #{fromName,jdbcType=VARCHAR}, 
      #{toName,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=INTEGER}, #{logIdate,jdbcType=INTEGER}, #{logDatetime,jdbcType=TIMESTAMP}, 
      #{fId,jdbcType=BIGINT}, #{praiseNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.maopao.entity.mark.MarkComment">
    insert into mark_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coId != null">
        co_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="markId != null">
        mark_id,
      </if>
      <if test="fromUid != null">
        from_uid,
      </if>
      <if test="toUid != null">
        to_uid,
      </if>
      <if test="fromName != null">
        from_name,
      </if>
      <if test="toName != null">
        to_name,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="logIdate != null">
        log_idate,
      </if>
      <if test="logDatetime != null">
        log_datetime,
      </if>
      <if test="fId != null">
        f_id,
      </if>
      <if test="praiseNum != null">
        praise_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coId != null">
        #{coId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="markId != null">
        #{markId,jdbcType=BIGINT},
      </if>
      <if test="fromUid != null">
        #{fromUid,jdbcType=BIGINT},
      </if>
      <if test="toUid != null">
        #{toUid,jdbcType=BIGINT},
      </if>
      <if test="fromName != null">
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        #{toName,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="logIdate != null">
        #{logIdate,jdbcType=INTEGER},
      </if>
      <if test="logDatetime != null">
        #{logDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fId != null">
        #{fId,jdbcType=BIGINT},
      </if>
      <if test="praiseNum != null">
        #{praiseNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maopao.entity.mark.MarkCommentExample" resultType="java.lang.Long">
    select count(*) from mark_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mark_comment
    <set>
      <if test="record.coId != null">
        co_id = #{record.coId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.markId != null">
        mark_id = #{record.markId,jdbcType=BIGINT},
      </if>
      <if test="record.fromUid != null">
        from_uid = #{record.fromUid,jdbcType=BIGINT},
      </if>
      <if test="record.toUid != null">
        to_uid = #{record.toUid,jdbcType=BIGINT},
      </if>
      <if test="record.fromName != null">
        from_name = #{record.fromName,jdbcType=VARCHAR},
      </if>
      <if test="record.toName != null">
        to_name = #{record.toName,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.logIdate != null">
        log_idate = #{record.logIdate,jdbcType=INTEGER},
      </if>
      <if test="record.logDatetime != null">
        log_datetime = #{record.logDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fId != null">
        f_id = #{record.fId,jdbcType=BIGINT},
      </if>
      <if test="record.praiseNum != null">
        praise_num = #{record.praiseNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mark_comment
    set co_id = #{record.coId,jdbcType=BIGINT},
    user_id = #{record.userId,jdbcType=BIGINT},
    mark_id = #{record.markId,jdbcType=BIGINT},
    from_uid = #{record.fromUid,jdbcType=BIGINT},
    to_uid = #{record.toUid,jdbcType=BIGINT},
    from_name = #{record.fromName,jdbcType=VARCHAR},
    to_name = #{record.toName,jdbcType=VARCHAR},
    text = #{record.text,jdbcType=VARCHAR},
    avatar = #{record.avatar,jdbcType=VARCHAR},
    is_del = #{record.isDel,jdbcType=INTEGER},
    log_idate = #{record.logIdate,jdbcType=INTEGER},
    log_datetime = #{record.logDatetime,jdbcType=TIMESTAMP},
    f_id = #{record.fId,jdbcType=BIGINT},
    praise_num = #{record.praiseNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maopao.entity.mark.MarkComment">
    update mark_comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="markId != null">
        mark_id = #{markId,jdbcType=BIGINT},
      </if>
      <if test="fromUid != null">
        from_uid = #{fromUid,jdbcType=BIGINT},
      </if>
      <if test="toUid != null">
        to_uid = #{toUid,jdbcType=BIGINT},
      </if>
      <if test="fromName != null">
        from_name = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        to_name = #{toName,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="logIdate != null">
        log_idate = #{logIdate,jdbcType=INTEGER},
      </if>
      <if test="logDatetime != null">
        log_datetime = #{logDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fId != null">
        f_id = #{fId,jdbcType=BIGINT},
      </if>
      <if test="praiseNum != null">
        praise_num = #{praiseNum,jdbcType=INTEGER},
      </if>
    </set>
    where co_id = #{coId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maopao.entity.mark.MarkComment">
    update mark_comment
    set user_id = #{userId,jdbcType=BIGINT},
      mark_id = #{markId,jdbcType=BIGINT},
      from_uid = #{fromUid,jdbcType=BIGINT},
      to_uid = #{toUid,jdbcType=BIGINT},
      from_name = #{fromName,jdbcType=VARCHAR},
      to_name = #{toName,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      log_idate = #{logIdate,jdbcType=INTEGER},
      log_datetime = #{logDatetime,jdbcType=TIMESTAMP},
      f_id = #{fId,jdbcType=BIGINT},
      praise_num = #{praiseNum,jdbcType=INTEGER}
    where co_id = #{coId,jdbcType=BIGINT}
  </update>

</mapper>