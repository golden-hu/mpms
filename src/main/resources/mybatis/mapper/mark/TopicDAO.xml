<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maopao.mapper.mark.TopicDAO">
  <resultMap id="BaseResultMap" type="com.maopao.entity.mark.Topic">
    <id column="topic_id" jdbcType="BIGINT" property="topicId" />
    <result column="topic_name" jdbcType="VARCHAR" property="topicName" />
    <result column="log_datetime" jdbcType="TIMESTAMP" property="logDatetime" />
    <result column="log_idate" jdbcType="INTEGER" property="logIdate" />
    <result column="is_rec" jdbcType="INTEGER" property="isRec" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="quote_num" jdbcType="INTEGER" property="quoteNum" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="plant" jdbcType="INTEGER" property="plant" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    topic_id, topic_name, log_datetime, log_idate, is_rec, rank, quote_num, is_del, plant
  </sql>
  <select id="selectByExample" parameterType="com.maopao.entity.mark.TopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from topic
    where topic_id = #{topicId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from topic
    where topic_id = #{topicId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.maopao.entity.mark.TopicExample">
    delete from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maopao.entity.mark.Topic">
    insert into topic (topic_id, topic_name, log_datetime, 
      log_idate, is_rec, rank, 
      quote_num, is_del, plant
      )
    values (#{topicId,jdbcType=BIGINT}, #{topicName,jdbcType=VARCHAR}, #{logDatetime,jdbcType=TIMESTAMP}, 
      #{logIdate,jdbcType=INTEGER}, #{isRec,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER}, 
      #{quoteNum,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, #{plant,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maopao.entity.mark.Topic">
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="topicName != null">
        topic_name,
      </if>
      <if test="logDatetime != null">
        log_datetime,
      </if>
      <if test="logIdate != null">
        log_idate,
      </if>
      <if test="isRec != null">
        is_rec,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="quoteNum != null">
        quote_num,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="plant != null">
        plant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="topicId != null">
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="topicName != null">
        #{topicName,jdbcType=VARCHAR},
      </if>
      <if test="logDatetime != null">
        #{logDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="logIdate != null">
        #{logIdate,jdbcType=INTEGER},
      </if>
      <if test="isRec != null">
        #{isRec,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="quoteNum != null">
        #{quoteNum,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="plant != null">
        #{plant,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maopao.entity.mark.TopicExample" resultType="java.lang.Long">
    select count(*) from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update topic
    <set>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=BIGINT},
      </if>
      <if test="record.topicName != null">
        topic_name = #{record.topicName,jdbcType=VARCHAR},
      </if>
      <if test="record.logDatetime != null">
        log_datetime = #{record.logDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logIdate != null">
        log_idate = #{record.logIdate,jdbcType=INTEGER},
      </if>
      <if test="record.isRec != null">
        is_rec = #{record.isRec,jdbcType=INTEGER},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.quoteNum != null">
        quote_num = #{record.quoteNum,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.plant != null">
        plant = #{record.plant,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update topic
    set topic_id = #{record.topicId,jdbcType=BIGINT},
      topic_name = #{record.topicName,jdbcType=VARCHAR},
      log_datetime = #{record.logDatetime,jdbcType=TIMESTAMP},
      log_idate = #{record.logIdate,jdbcType=INTEGER},
      is_rec = #{record.isRec,jdbcType=INTEGER},
      rank = #{record.rank,jdbcType=INTEGER},
      quote_num = #{record.quoteNum,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER},
      plant = #{record.plant,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maopao.entity.mark.Topic">
    update topic
    <set>
      <if test="topicName != null">
        topic_name = #{topicName,jdbcType=VARCHAR},
      </if>
      <if test="logDatetime != null">
        log_datetime = #{logDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="logIdate != null">
        log_idate = #{logIdate,jdbcType=INTEGER},
      </if>
      <if test="isRec != null">
        is_rec = #{isRec,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="quoteNum != null">
        quote_num = #{quoteNum,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="plant != null">
        plant = #{plant,jdbcType=INTEGER},
      </if>
    </set>
    where topic_id = #{topicId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maopao.entity.mark.Topic">
    update topic
    set topic_name = #{topicName,jdbcType=VARCHAR},
      log_datetime = #{logDatetime,jdbcType=TIMESTAMP},
      log_idate = #{logIdate,jdbcType=INTEGER},
      is_rec = #{isRec,jdbcType=INTEGER},
      rank = #{rank,jdbcType=INTEGER},
      quote_num = #{quoteNum,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER},
      plant = #{plant,jdbcType=INTEGER}
    where topic_id = #{topicId,jdbcType=BIGINT}
  </update>
</mapper>