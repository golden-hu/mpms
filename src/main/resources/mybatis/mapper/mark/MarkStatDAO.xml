<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maopao.mapper.mark.MarkStatDAO">
  <resultMap id="BaseResultMap" type="com.maopao.entity.mark.MarkStat">
    <id column="mark_id" jdbcType="BIGINT" property="markId" />
    <result column="city_code" jdbcType="INTEGER" property="cityCode" />
    <result column="lat" jdbcType="DOUBLE" property="lat" />
    <result column="lng" jdbcType="DOUBLE" property="lng" />
    <result column="look" jdbcType="INTEGER" property="look" />
    <result column="praise" jdbcType="INTEGER" property="praise" />
    <result column="comment" jdbcType="INTEGER" property="comment" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="log_idate" jdbcType="INTEGER" property="logIdate" />
    <result column="forward" jdbcType="INTEGER" property="forward" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mark_id, city_code, lat, lng, look, praise, comment, rank, log_idate, forward, type
  </sql>
  <select id="selectByExample" parameterType="com.maopao.entity.mark.MarkStatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mark_stat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mark_stat
    where mark_id = #{markId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mark_stat
    where mark_id = #{markId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.maopao.entity.mark.MarkStatExample">
    delete from mark_stat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maopao.entity.mark.MarkStat">
    insert into mark_stat (mark_id, city_code, lat, 
      lng, look, praise, comment, 
      rank, log_idate, forward, 
      type)
    values (#{markId,jdbcType=BIGINT}, #{cityCode,jdbcType=INTEGER}, #{lat,jdbcType=DOUBLE}, 
      #{lng,jdbcType=DOUBLE}, #{look,jdbcType=INTEGER}, #{praise,jdbcType=INTEGER}, #{comment,jdbcType=INTEGER}, 
      #{rank,jdbcType=INTEGER}, #{logIdate,jdbcType=INTEGER}, #{forward,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.maopao.entity.mark.MarkStat">
    insert into mark_stat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="markId != null">
        mark_id,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="look != null">
        look,
      </if>
      <if test="praise != null">
        praise,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="logIdate != null">
        log_idate,
      </if>
      <if test="forward != null">
        forward,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="markId != null">
        #{markId,jdbcType=BIGINT},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=INTEGER},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=DOUBLE},
      </if>
      <if test="look != null">
        #{look,jdbcType=INTEGER},
      </if>
      <if test="praise != null">
        #{praise,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="logIdate != null">
        #{logIdate,jdbcType=INTEGER},
      </if>
      <if test="forward != null">
        #{forward,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maopao.entity.mark.MarkStatExample" resultType="java.lang.Long">
    select count(*) from mark_stat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mark_stat
    <set>
      <if test="record.markId != null">
        mark_id = #{record.markId,jdbcType=BIGINT},
      </if>
      <if test="record.cityCode != null">
        city_code = #{record.cityCode,jdbcType=INTEGER},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=DOUBLE},
      </if>
      <if test="record.lng != null">
        lng = #{record.lng,jdbcType=DOUBLE},
      </if>
      <if test="record.look != null">
        look = #{record.look,jdbcType=INTEGER},
      </if>
      <if test="record.praise != null">
        praise = #{record.praise,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=INTEGER},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.logIdate != null">
        log_idate = #{record.logIdate,jdbcType=INTEGER},
      </if>
      <if test="record.forward != null">
        forward = #{record.forward,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mark_stat
    set mark_id = #{record.markId,jdbcType=BIGINT},
    city_code = #{record.cityCode,jdbcType=INTEGER},
    lat = #{record.lat,jdbcType=DOUBLE},
    lng = #{record.lng,jdbcType=DOUBLE},
    look = #{record.look,jdbcType=INTEGER},
    praise = #{record.praise,jdbcType=INTEGER},
    comment = #{record.comment,jdbcType=INTEGER},
    rank = #{record.rank,jdbcType=INTEGER},
    log_idate = #{record.logIdate,jdbcType=INTEGER},
    forward = #{record.forward,jdbcType=INTEGER},
    type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maopao.entity.mark.MarkStat">
    update mark_stat
    <set>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=INTEGER},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=DOUBLE},
      </if>
      <if test="look != null">
        look = #{look,jdbcType=INTEGER},
      </if>
      <if test="praise != null">
        praise = #{praise,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="logIdate != null">
        log_idate = #{logIdate,jdbcType=INTEGER},
      </if>
      <if test="forward != null">
        forward = #{forward,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where mark_id = #{markId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maopao.entity.mark.MarkStat">
    update mark_stat
    set city_code = #{cityCode,jdbcType=INTEGER},
      lat = #{lat,jdbcType=DOUBLE},
      lng = #{lng,jdbcType=DOUBLE},
      look = #{look,jdbcType=INTEGER},
      praise = #{praise,jdbcType=INTEGER},
      comment = #{comment,jdbcType=INTEGER},
      rank = #{rank,jdbcType=INTEGER},
      log_idate = #{logIdate,jdbcType=INTEGER},
      forward = #{forward,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where mark_id = #{markId,jdbcType=BIGINT}
  </update>

</mapper>